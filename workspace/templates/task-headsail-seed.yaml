---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: headsail-seed
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/categories: Headsail
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: deploy
    tekton.dev/displayName: "Headsail Deploy"
    tekton.dev/platforms: "linux/amd64"
spec:
  workspaces:
    - name: manifest-dir
      optional: true
      description: >-
        The workspace which contains kubernetes manifests which we want to apply on the cluster.
    - name: kubeconfig-dir
      optional: true
      description: >-
        The workspace which contains the the kubeconfig file if in case we want to run the oc command on another cluster.
  description: >-
    The task scaffolds the headsail student applications by seeding the student auxiliary namespace with configuration. 
    It generates configmaps to store the student-id and argocd endpoint, and creates secrets for the argocd environment. 

  params:
    - name: student-id
      type: string
      default: "1"
    - name: argocd-namespace
      type: string
      default: openshift-gitops
    - name: argocd-username
      type: string
      default: "admin"
    - name: oc-version
      description: The OpenShift Version to use
      type: string
      default: "v4.12"
  steps:
    - name: oc
      image: registry.redhat.io/openshift4/ose-cli:$(params.oc-version)
      script: |
        #!/usr/bin/env bash

        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)

        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        oc delete secret argocd-env-secret  &>/dev/null || true
        oc delete configmap argocd-env-configmap &>/dev/null || true
        oc delete configmap headsail-student-configmap &>/dev/null || true

        ARGOCD_SERVER=$(oc get configmap argocd-cm -n $(params.argocd-namespace) -o jsonpath='{.data.url}' | sed 's/^https:\/\///')
        oc create configmap argocd-env-configmap --from-literal="ARGOCD_SERVER=$ARGOCD_SERVER"

        ARGOCD_USERNAME="$(params.argocd-username)"
        ARGOCD_PASSWORD=$(oc get secret openshift-gitops-cluster -n $(params.argocd-namespace) -o jsonpath='{.data.admin\.password}' | base64 -d)
        oc create secret generic argocd-env-secret --from-literal="ARGOCD_USERNAME=$(params.argocd-username)" --from-literal="ARGOCD_PASSWORD=$ARGOCD_PASSWORD"

        oc create configmap headsail-student-configmap --from-literal=STUDENT_ID=$(params.student-id)
