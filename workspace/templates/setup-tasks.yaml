---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: headsail-deploy
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/categories: Openshift
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: deploy
    tekton.dev/displayName: "Headsail Deploy"
    tekton.dev/platforms: "linux/amd64"
spec:
  workspaces:
    - name: manifest-dir
      optional: true
      description: >-
        The workspace which contains kubernetes manifests which we want to apply on the cluster.
    - name: kubeconfig-dir
      optional: true
      description: >-
        The workspace which contains the the kubeconfig file if in case we want to run the oc command on another cluster.
  description: >-
    This task deploys headsail student applications.

  params:
    - name: argocd-namespace
      type: string
      default: openshift-gitops
    - name: oc-version
      description: The OpenShift Version to use
      type: string
      default: "4.7"
  steps:
    - name: oc
      image: quay.io/openshift/origin-cli:$(params.oc-version)
      script: |
        #!/usr/bin/env bash
        set -x

        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)

        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        oc delete secret argocd-platform -n auxiliary-student-1 || true
        
        ARGOCD_PASSWORD=$(oc get secret argocd-secret -n $(params.argocd-namespace) -o jsonpath='{.data.admin\.password}' | base64 -d)
        ARGOCD_SERVER=$(oc get configMap argocd-cm -n $(params.argocd-namespace) -o jsonpath='{.data.url}' | sed 's/^https:\/\///')

        oc create secret generic argocd-platform --from-literal="username=admin" --from-literal="password=$ARGOCD_PASSWORD" --from-literal="server=$ARGOCD_SERVER"